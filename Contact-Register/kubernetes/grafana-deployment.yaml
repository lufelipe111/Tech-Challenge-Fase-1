apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
        - name: init-dashboards
          image: busybox:1.36
          command:
            [
              "sh",
              "-c",
              "mkdir -p /var/lib/grafana/dashboards && cp /configmaps/contact-register-dashboard.json /var/lib/grafana/dashboards/contact-register-dashboard.json",
            ]
          volumeMounts:
            - name: grafana-dashboards
              mountPath: /configmaps
            - name: grafana-storage
              mountPath: /var/lib/grafana
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboard-provider
              mountPath: /etc/grafana/provisioning/dashboards
          resources:
            limits:
              memory: 512Mi
              cpu: "0.4"
            requests:
              memory: 256Mi
              cpu: "0.2"
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-dashboard-provider
          configMap:
            name: grafana-dashboard-provider
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
